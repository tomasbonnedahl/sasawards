- Start job immidiately after start, and then wait
- Filtering like t-hacks, destination and duration
- Do not add to queue if already processing/starting
- Empty queue on startup/restart?
- Remove errors after a while
    Job that removes them after a week, use ts?
- Start one separate job for each (origin, dst)?
    Must run in sequence to not overly use the API - queuing solves that?
    Can lower the timeout for each job
    Can one job post another job?
- Send e-mails regarding errors separately (separate job?)
    Needs flag in db for e-mail sent? Can be scheduled differently from fetching data
- Send e-mail by queueing it as a job
- Add more to parsing, do a few calls to API and get as many variants as possible
- Fix psycopg2-binary, pip install -r req.txt
- Handle plus seats
- Do not try ARN-SFO as SAS doesn't have a direct flight, unnessesary calls, set up relations
    Seems to have more than enough, worth anyways?
- Add origin, dest, dates to db and have a way to set them from a view (django superuser?)
- Run tests from PyCharm, works with python manage.py test (test_response_handler doesn't work)
- Add a frontend
    - Possible to update the configuration
    - Do trend analysis on when seats are released
- What is openflight used for in travelhacks?